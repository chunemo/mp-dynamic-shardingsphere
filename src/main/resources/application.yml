spring:
  application:
    name: mp-shard
  datasource:
    dynamic:
      druid:
        # 初始化大小，最小，最大
        initial-size: 50
        min-idle: 30
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        validation-query: "SELECT 1 FROM DUAL"
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filter.commons-log.connection-logger-name: "stat,wall,log4j"
        filter.stat.log-slow-sql: true
        filter.stat.slow-sql-millis: 2000
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connect-properties: "druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000"
        # 合并多个DruidDataSource的监控数据
        use-global-data-source-stat: true
  # DruidDataSourceAutoConfigure会注入一个DataSourceWrapper，其会在原生的spring.datasource下找url,username,password等。而动态数据源的配置路径是变化的
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  shardingsphere:
    props:
      sql:
        show: true

server:
  port: 10083

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl